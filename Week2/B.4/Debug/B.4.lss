
B.4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  000004d8  0000054c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000963  00000000  00000000  00000604  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000867  00000000  00000000  00000f67  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e7  00000000  00000000  000017ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001ab8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000432  00000000  00000000  00001aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c2  00000000  00000000  00001f1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001fe0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ed       	ldi	r30, 0xD8	; 216
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 32       	cpi	r26, 0x24	; 36
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	13 d0       	rcall	.+38     	; 0xda <main>
  b4:	0f c2       	rjmp	.+1054   	; 0x4d4 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <wait>:
				clock value is set. This is used by _delay_ms inside
				util/delay.h
Version :    	DMK, Initial code
*******************************************************************/
{
	for (int i=0; i<ms; i++)
  b8:	18 16       	cp	r1, r24
  ba:	19 06       	cpc	r1, r25
  bc:	6c f4       	brge	.+26     	; 0xd8 <wait+0x20>
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	ef ec       	ldi	r30, 0xCF	; 207
  c4:	f7 e0       	ldi	r31, 0x07	; 7
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <wait+0xe>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <wait+0x14>
  cc:	00 00       	nop
  ce:	2f 5f       	subi	r18, 0xFF	; 255
  d0:	3f 4f       	sbci	r19, 0xFF	; 255
  d2:	82 17       	cp	r24, r18
  d4:	93 07       	cpc	r25, r19
  d6:	a9 f7       	brne	.-22     	; 0xc2 <wait+0xa>
  d8:	08 95       	ret

000000da <main>:
outputs:	
notes:			
Version :    	DMK, Initial code
*******************************************************************/
{
	DDRC = 0b11111111;					// PORTD all output
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	84 bb       	out	0x14, r24	; 20
	int delay = 0;
  de:	00 e0       	ldi	r16, 0x00	; 0
  e0:	10 e0       	ldi	r17, 0x00	; 0
	
	while (1==1)
	{
		// Set index to begin of pattern array
		int index = 0;
		if ((150-delay)*0.1 < 1)
  e2:	0f 2e       	mov	r0, r31
  e4:	f6 e9       	ldi	r31, 0x96	; 150
  e6:	cf 2e       	mov	r12, r31
  e8:	d1 2c       	mov	r13, r1
  ea:	f0 2d       	mov	r31, r0
		{
			delay = 0;
  ec:	a1 2c       	mov	r10, r1
  ee:	b1 2c       	mov	r11, r1
		}else{
			delay += (150-delay)*0.1;
		}
		
		// as long as delay has meaningful content
		while( pattern[index].delay != 0 ) {
  f0:	0f 2e       	mov	r0, r31
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	ef 2e       	mov	r14, r31
  f6:	f1 e0       	ldi	r31, 0x01	; 1
  f8:	ff 2e       	mov	r15, r31
  fa:	f0 2d       	mov	r31, r0
	
	while (1==1)
	{
		// Set index to begin of pattern array
		int index = 0;
		if ((150-delay)*0.1 < 1)
  fc:	b6 01       	movw	r22, r12
  fe:	60 1b       	sub	r22, r16
 100:	71 0b       	sbc	r23, r17
 102:	07 2e       	mov	r0, r23
 104:	00 0c       	add	r0, r0
 106:	88 0b       	sbc	r24, r24
 108:	99 0b       	sbc	r25, r25
 10a:	d1 d0       	rcall	.+418    	; 0x2ae <__floatsisf>
 10c:	2d ec       	ldi	r18, 0xCD	; 205
 10e:	3c ec       	ldi	r19, 0xCC	; 204
 110:	4c ec       	ldi	r20, 0xCC	; 204
 112:	5d e3       	ldi	r21, 0x3D	; 61
 114:	7c d1       	rcall	.+760    	; 0x40e <__mulsf3>
 116:	2b 01       	movw	r4, r22
 118:	3c 01       	movw	r6, r24
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	40 e8       	ldi	r20, 0x80	; 128
 120:	5f e3       	ldi	r21, 0x3F	; 63
 122:	8e d0       	rcall	.+284    	; 0x240 <__cmpsf2>
 124:	88 23       	and	r24, r24
 126:	5c f0       	brlt	.+22     	; 0x13e <main+0x64>
		{
			delay = 0;
		}else{
			delay += (150-delay)*0.1;
 128:	b8 01       	movw	r22, r16
 12a:	11 0f       	add	r17, r17
 12c:	88 0b       	sbc	r24, r24
 12e:	99 0b       	sbc	r25, r25
 130:	be d0       	rcall	.+380    	; 0x2ae <__floatsisf>
 132:	a3 01       	movw	r20, r6
 134:	92 01       	movw	r18, r4
 136:	20 d0       	rcall	.+64     	; 0x178 <__addsf3>
 138:	87 d0       	rcall	.+270    	; 0x248 <__fixsfsi>
 13a:	8b 01       	movw	r16, r22
 13c:	02 c0       	rjmp	.+4      	; 0x142 <main+0x68>
	{
		// Set index to begin of pattern array
		int index = 0;
		if ((150-delay)*0.1 < 1)
		{
			delay = 0;
 13e:	0a 2d       	mov	r16, r10
 140:	1b 2d       	mov	r17, r11
		}else{
			delay += (150-delay)*0.1;
		}
		
		// as long as delay has meaningful content
		while( pattern[index].delay != 0 ) {
 142:	f7 01       	movw	r30, r14
 144:	81 81       	ldd	r24, Z+1	; 0x01
 146:	92 81       	ldd	r25, Z+2	; 0x02
 148:	89 2b       	or	r24, r25
 14a:	c1 f2       	breq	.-80     	; 0xfc <main+0x22>
 14c:	c0 e0       	ldi	r28, 0x00	; 0
 14e:	d1 e0       	ldi	r29, 0x01	; 1
			// Write data to PORTD	
			PORTC = pattern[index].data;
 150:	88 81       	ld	r24, Y
 152:	85 bb       	out	0x15, r24	; 21
			// wait
			if (pattern[index].delay != 0)
 154:	89 81       	ldd	r24, Y+1	; 0x01
 156:	9a 81       	ldd	r25, Y+2	; 0x02
 158:	00 97       	sbiw	r24, 0x00	; 0
			{
				wait(pattern[index].delay - delay);
 15a:	21 f0       	breq	.+8      	; 0x164 <main+0x8a>
 15c:	80 1b       	sub	r24, r16
 15e:	91 0b       	sbc	r25, r17
 160:	ab df       	rcall	.-170    	; 0xb8 <wait>
			}else{
				wait(pattern[index].delay);
 162:	03 c0       	rjmp	.+6      	; 0x16a <main+0x90>
 164:	8a 2d       	mov	r24, r10
 166:	9b 2d       	mov	r25, r11
 168:	a7 df       	rcall	.-178    	; 0xb8 <wait>
 16a:	23 96       	adiw	r28, 0x03	; 3
		}else{
			delay += (150-delay)*0.1;
		}
		
		// as long as delay has meaningful content
		while( pattern[index].delay != 0 ) {
 16c:	89 81       	ldd	r24, Y+1	; 0x01
 16e:	9a 81       	ldd	r25, Y+2	; 0x02
 170:	89 2b       	or	r24, r25
 172:	71 f7       	brne	.-36     	; 0x150 <main+0x76>
 174:	c3 cf       	rjmp	.-122    	; 0xfc <main+0x22>

00000176 <__subsf3>:
 176:	50 58       	subi	r21, 0x80	; 128

00000178 <__addsf3>:
 178:	bb 27       	eor	r27, r27
 17a:	aa 27       	eor	r26, r26
 17c:	0e d0       	rcall	.+28     	; 0x19a <__addsf3x>
 17e:	0d c1       	rjmp	.+538    	; 0x39a <__fp_round>
 180:	fe d0       	rcall	.+508    	; 0x37e <__fp_pscA>
 182:	30 f0       	brcs	.+12     	; 0x190 <__addsf3+0x18>
 184:	03 d1       	rcall	.+518    	; 0x38c <__fp_pscB>
 186:	20 f0       	brcs	.+8      	; 0x190 <__addsf3+0x18>
 188:	31 f4       	brne	.+12     	; 0x196 <__addsf3+0x1e>
 18a:	9f 3f       	cpi	r25, 0xFF	; 255
 18c:	11 f4       	brne	.+4      	; 0x192 <__addsf3+0x1a>
 18e:	1e f4       	brtc	.+6      	; 0x196 <__addsf3+0x1e>
 190:	f3 c0       	rjmp	.+486    	; 0x378 <__fp_nan>
 192:	0e f4       	brtc	.+2      	; 0x196 <__addsf3+0x1e>
 194:	e0 95       	com	r30
 196:	e7 fb       	bst	r30, 7
 198:	e9 c0       	rjmp	.+466    	; 0x36c <__fp_inf>

0000019a <__addsf3x>:
 19a:	e9 2f       	mov	r30, r25
 19c:	0f d1       	rcall	.+542    	; 0x3bc <__fp_split3>
 19e:	80 f3       	brcs	.-32     	; 0x180 <__addsf3+0x8>
 1a0:	ba 17       	cp	r27, r26
 1a2:	62 07       	cpc	r22, r18
 1a4:	73 07       	cpc	r23, r19
 1a6:	84 07       	cpc	r24, r20
 1a8:	95 07       	cpc	r25, r21
 1aa:	18 f0       	brcs	.+6      	; 0x1b2 <__addsf3x+0x18>
 1ac:	71 f4       	brne	.+28     	; 0x1ca <__addsf3x+0x30>
 1ae:	9e f5       	brtc	.+102    	; 0x216 <__addsf3x+0x7c>
 1b0:	27 c1       	rjmp	.+590    	; 0x400 <__fp_zero>
 1b2:	0e f4       	brtc	.+2      	; 0x1b6 <__addsf3x+0x1c>
 1b4:	e0 95       	com	r30
 1b6:	0b 2e       	mov	r0, r27
 1b8:	ba 2f       	mov	r27, r26
 1ba:	a0 2d       	mov	r26, r0
 1bc:	0b 01       	movw	r0, r22
 1be:	b9 01       	movw	r22, r18
 1c0:	90 01       	movw	r18, r0
 1c2:	0c 01       	movw	r0, r24
 1c4:	ca 01       	movw	r24, r20
 1c6:	a0 01       	movw	r20, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	ff 27       	eor	r31, r31
 1cc:	59 1b       	sub	r21, r25
 1ce:	99 f0       	breq	.+38     	; 0x1f6 <__addsf3x+0x5c>
 1d0:	59 3f       	cpi	r21, 0xF9	; 249
 1d2:	50 f4       	brcc	.+20     	; 0x1e8 <__addsf3x+0x4e>
 1d4:	50 3e       	cpi	r21, 0xE0	; 224
 1d6:	68 f1       	brcs	.+90     	; 0x232 <__addsf3x+0x98>
 1d8:	1a 16       	cp	r1, r26
 1da:	f0 40       	sbci	r31, 0x00	; 0
 1dc:	a2 2f       	mov	r26, r18
 1de:	23 2f       	mov	r18, r19
 1e0:	34 2f       	mov	r19, r20
 1e2:	44 27       	eor	r20, r20
 1e4:	58 5f       	subi	r21, 0xF8	; 248
 1e6:	f3 cf       	rjmp	.-26     	; 0x1ce <__addsf3x+0x34>
 1e8:	46 95       	lsr	r20
 1ea:	37 95       	ror	r19
 1ec:	27 95       	ror	r18
 1ee:	a7 95       	ror	r26
 1f0:	f0 40       	sbci	r31, 0x00	; 0
 1f2:	53 95       	inc	r21
 1f4:	c9 f7       	brne	.-14     	; 0x1e8 <__addsf3x+0x4e>
 1f6:	7e f4       	brtc	.+30     	; 0x216 <__addsf3x+0x7c>
 1f8:	1f 16       	cp	r1, r31
 1fa:	ba 0b       	sbc	r27, r26
 1fc:	62 0b       	sbc	r22, r18
 1fe:	73 0b       	sbc	r23, r19
 200:	84 0b       	sbc	r24, r20
 202:	ba f0       	brmi	.+46     	; 0x232 <__addsf3x+0x98>
 204:	91 50       	subi	r25, 0x01	; 1
 206:	a1 f0       	breq	.+40     	; 0x230 <__addsf3x+0x96>
 208:	ff 0f       	add	r31, r31
 20a:	bb 1f       	adc	r27, r27
 20c:	66 1f       	adc	r22, r22
 20e:	77 1f       	adc	r23, r23
 210:	88 1f       	adc	r24, r24
 212:	c2 f7       	brpl	.-16     	; 0x204 <__addsf3x+0x6a>
 214:	0e c0       	rjmp	.+28     	; 0x232 <__addsf3x+0x98>
 216:	ba 0f       	add	r27, r26
 218:	62 1f       	adc	r22, r18
 21a:	73 1f       	adc	r23, r19
 21c:	84 1f       	adc	r24, r20
 21e:	48 f4       	brcc	.+18     	; 0x232 <__addsf3x+0x98>
 220:	87 95       	ror	r24
 222:	77 95       	ror	r23
 224:	67 95       	ror	r22
 226:	b7 95       	ror	r27
 228:	f7 95       	ror	r31
 22a:	9e 3f       	cpi	r25, 0xFE	; 254
 22c:	08 f0       	brcs	.+2      	; 0x230 <__addsf3x+0x96>
 22e:	b3 cf       	rjmp	.-154    	; 0x196 <__addsf3+0x1e>
 230:	93 95       	inc	r25
 232:	88 0f       	add	r24, r24
 234:	08 f0       	brcs	.+2      	; 0x238 <__addsf3x+0x9e>
 236:	99 27       	eor	r25, r25
 238:	ee 0f       	add	r30, r30
 23a:	97 95       	ror	r25
 23c:	87 95       	ror	r24
 23e:	08 95       	ret

00000240 <__cmpsf2>:
 240:	71 d0       	rcall	.+226    	; 0x324 <__fp_cmp>
 242:	08 f4       	brcc	.+2      	; 0x246 <__cmpsf2+0x6>
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	08 95       	ret

00000248 <__fixsfsi>:
 248:	04 d0       	rcall	.+8      	; 0x252 <__fixunssfsi>
 24a:	68 94       	set
 24c:	b1 11       	cpse	r27, r1
 24e:	d9 c0       	rjmp	.+434    	; 0x402 <__fp_szero>
 250:	08 95       	ret

00000252 <__fixunssfsi>:
 252:	bc d0       	rcall	.+376    	; 0x3cc <__fp_splitA>
 254:	88 f0       	brcs	.+34     	; 0x278 <__fixunssfsi+0x26>
 256:	9f 57       	subi	r25, 0x7F	; 127
 258:	90 f0       	brcs	.+36     	; 0x27e <__fixunssfsi+0x2c>
 25a:	b9 2f       	mov	r27, r25
 25c:	99 27       	eor	r25, r25
 25e:	b7 51       	subi	r27, 0x17	; 23
 260:	a0 f0       	brcs	.+40     	; 0x28a <__fixunssfsi+0x38>
 262:	d1 f0       	breq	.+52     	; 0x298 <__fixunssfsi+0x46>
 264:	66 0f       	add	r22, r22
 266:	77 1f       	adc	r23, r23
 268:	88 1f       	adc	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	1a f0       	brmi	.+6      	; 0x274 <__fixunssfsi+0x22>
 26e:	ba 95       	dec	r27
 270:	c9 f7       	brne	.-14     	; 0x264 <__fixunssfsi+0x12>
 272:	12 c0       	rjmp	.+36     	; 0x298 <__fixunssfsi+0x46>
 274:	b1 30       	cpi	r27, 0x01	; 1
 276:	81 f0       	breq	.+32     	; 0x298 <__fixunssfsi+0x46>
 278:	c3 d0       	rcall	.+390    	; 0x400 <__fp_zero>
 27a:	b1 e0       	ldi	r27, 0x01	; 1
 27c:	08 95       	ret
 27e:	c0 c0       	rjmp	.+384    	; 0x400 <__fp_zero>
 280:	67 2f       	mov	r22, r23
 282:	78 2f       	mov	r23, r24
 284:	88 27       	eor	r24, r24
 286:	b8 5f       	subi	r27, 0xF8	; 248
 288:	39 f0       	breq	.+14     	; 0x298 <__fixunssfsi+0x46>
 28a:	b9 3f       	cpi	r27, 0xF9	; 249
 28c:	cc f3       	brlt	.-14     	; 0x280 <__fixunssfsi+0x2e>
 28e:	86 95       	lsr	r24
 290:	77 95       	ror	r23
 292:	67 95       	ror	r22
 294:	b3 95       	inc	r27
 296:	d9 f7       	brne	.-10     	; 0x28e <__fixunssfsi+0x3c>
 298:	3e f4       	brtc	.+14     	; 0x2a8 <__fixunssfsi+0x56>
 29a:	90 95       	com	r25
 29c:	80 95       	com	r24
 29e:	70 95       	com	r23
 2a0:	61 95       	neg	r22
 2a2:	7f 4f       	sbci	r23, 0xFF	; 255
 2a4:	8f 4f       	sbci	r24, 0xFF	; 255
 2a6:	9f 4f       	sbci	r25, 0xFF	; 255
 2a8:	08 95       	ret

000002aa <__floatunsisf>:
 2aa:	e8 94       	clt
 2ac:	09 c0       	rjmp	.+18     	; 0x2c0 <__floatsisf+0x12>

000002ae <__floatsisf>:
 2ae:	97 fb       	bst	r25, 7
 2b0:	3e f4       	brtc	.+14     	; 0x2c0 <__floatsisf+0x12>
 2b2:	90 95       	com	r25
 2b4:	80 95       	com	r24
 2b6:	70 95       	com	r23
 2b8:	61 95       	neg	r22
 2ba:	7f 4f       	sbci	r23, 0xFF	; 255
 2bc:	8f 4f       	sbci	r24, 0xFF	; 255
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	99 23       	and	r25, r25
 2c2:	a9 f0       	breq	.+42     	; 0x2ee <__floatsisf+0x40>
 2c4:	f9 2f       	mov	r31, r25
 2c6:	96 e9       	ldi	r25, 0x96	; 150
 2c8:	bb 27       	eor	r27, r27
 2ca:	93 95       	inc	r25
 2cc:	f6 95       	lsr	r31
 2ce:	87 95       	ror	r24
 2d0:	77 95       	ror	r23
 2d2:	67 95       	ror	r22
 2d4:	b7 95       	ror	r27
 2d6:	f1 11       	cpse	r31, r1
 2d8:	f8 cf       	rjmp	.-16     	; 0x2ca <__floatsisf+0x1c>
 2da:	fa f4       	brpl	.+62     	; 0x31a <__floatsisf+0x6c>
 2dc:	bb 0f       	add	r27, r27
 2de:	11 f4       	brne	.+4      	; 0x2e4 <__floatsisf+0x36>
 2e0:	60 ff       	sbrs	r22, 0
 2e2:	1b c0       	rjmp	.+54     	; 0x31a <__floatsisf+0x6c>
 2e4:	6f 5f       	subi	r22, 0xFF	; 255
 2e6:	7f 4f       	sbci	r23, 0xFF	; 255
 2e8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ea:	9f 4f       	sbci	r25, 0xFF	; 255
 2ec:	16 c0       	rjmp	.+44     	; 0x31a <__floatsisf+0x6c>
 2ee:	88 23       	and	r24, r24
 2f0:	11 f0       	breq	.+4      	; 0x2f6 <__floatsisf+0x48>
 2f2:	96 e9       	ldi	r25, 0x96	; 150
 2f4:	11 c0       	rjmp	.+34     	; 0x318 <__floatsisf+0x6a>
 2f6:	77 23       	and	r23, r23
 2f8:	21 f0       	breq	.+8      	; 0x302 <__floatsisf+0x54>
 2fa:	9e e8       	ldi	r25, 0x8E	; 142
 2fc:	87 2f       	mov	r24, r23
 2fe:	76 2f       	mov	r23, r22
 300:	05 c0       	rjmp	.+10     	; 0x30c <__floatsisf+0x5e>
 302:	66 23       	and	r22, r22
 304:	71 f0       	breq	.+28     	; 0x322 <__floatsisf+0x74>
 306:	96 e8       	ldi	r25, 0x86	; 134
 308:	86 2f       	mov	r24, r22
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	2a f0       	brmi	.+10     	; 0x31a <__floatsisf+0x6c>
 310:	9a 95       	dec	r25
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	88 1f       	adc	r24, r24
 318:	da f7       	brpl	.-10     	; 0x310 <__floatsisf+0x62>
 31a:	88 0f       	add	r24, r24
 31c:	96 95       	lsr	r25
 31e:	87 95       	ror	r24
 320:	97 f9       	bld	r25, 7
 322:	08 95       	ret

00000324 <__fp_cmp>:
 324:	99 0f       	add	r25, r25
 326:	00 08       	sbc	r0, r0
 328:	55 0f       	add	r21, r21
 32a:	aa 0b       	sbc	r26, r26
 32c:	e0 e8       	ldi	r30, 0x80	; 128
 32e:	fe ef       	ldi	r31, 0xFE	; 254
 330:	16 16       	cp	r1, r22
 332:	17 06       	cpc	r1, r23
 334:	e8 07       	cpc	r30, r24
 336:	f9 07       	cpc	r31, r25
 338:	c0 f0       	brcs	.+48     	; 0x36a <__fp_cmp+0x46>
 33a:	12 16       	cp	r1, r18
 33c:	13 06       	cpc	r1, r19
 33e:	e4 07       	cpc	r30, r20
 340:	f5 07       	cpc	r31, r21
 342:	98 f0       	brcs	.+38     	; 0x36a <__fp_cmp+0x46>
 344:	62 1b       	sub	r22, r18
 346:	73 0b       	sbc	r23, r19
 348:	84 0b       	sbc	r24, r20
 34a:	95 0b       	sbc	r25, r21
 34c:	39 f4       	brne	.+14     	; 0x35c <__fp_cmp+0x38>
 34e:	0a 26       	eor	r0, r26
 350:	61 f0       	breq	.+24     	; 0x36a <__fp_cmp+0x46>
 352:	23 2b       	or	r18, r19
 354:	24 2b       	or	r18, r20
 356:	25 2b       	or	r18, r21
 358:	21 f4       	brne	.+8      	; 0x362 <__fp_cmp+0x3e>
 35a:	08 95       	ret
 35c:	0a 26       	eor	r0, r26
 35e:	09 f4       	brne	.+2      	; 0x362 <__fp_cmp+0x3e>
 360:	a1 40       	sbci	r26, 0x01	; 1
 362:	a6 95       	lsr	r26
 364:	8f ef       	ldi	r24, 0xFF	; 255
 366:	81 1d       	adc	r24, r1
 368:	81 1d       	adc	r24, r1
 36a:	08 95       	ret

0000036c <__fp_inf>:
 36c:	97 f9       	bld	r25, 7
 36e:	9f 67       	ori	r25, 0x7F	; 127
 370:	80 e8       	ldi	r24, 0x80	; 128
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	08 95       	ret

00000378 <__fp_nan>:
 378:	9f ef       	ldi	r25, 0xFF	; 255
 37a:	80 ec       	ldi	r24, 0xC0	; 192
 37c:	08 95       	ret

0000037e <__fp_pscA>:
 37e:	00 24       	eor	r0, r0
 380:	0a 94       	dec	r0
 382:	16 16       	cp	r1, r22
 384:	17 06       	cpc	r1, r23
 386:	18 06       	cpc	r1, r24
 388:	09 06       	cpc	r0, r25
 38a:	08 95       	ret

0000038c <__fp_pscB>:
 38c:	00 24       	eor	r0, r0
 38e:	0a 94       	dec	r0
 390:	12 16       	cp	r1, r18
 392:	13 06       	cpc	r1, r19
 394:	14 06       	cpc	r1, r20
 396:	05 06       	cpc	r0, r21
 398:	08 95       	ret

0000039a <__fp_round>:
 39a:	09 2e       	mov	r0, r25
 39c:	03 94       	inc	r0
 39e:	00 0c       	add	r0, r0
 3a0:	11 f4       	brne	.+4      	; 0x3a6 <__fp_round+0xc>
 3a2:	88 23       	and	r24, r24
 3a4:	52 f0       	brmi	.+20     	; 0x3ba <__fp_round+0x20>
 3a6:	bb 0f       	add	r27, r27
 3a8:	40 f4       	brcc	.+16     	; 0x3ba <__fp_round+0x20>
 3aa:	bf 2b       	or	r27, r31
 3ac:	11 f4       	brne	.+4      	; 0x3b2 <__fp_round+0x18>
 3ae:	60 ff       	sbrs	r22, 0
 3b0:	04 c0       	rjmp	.+8      	; 0x3ba <__fp_round+0x20>
 3b2:	6f 5f       	subi	r22, 0xFF	; 255
 3b4:	7f 4f       	sbci	r23, 0xFF	; 255
 3b6:	8f 4f       	sbci	r24, 0xFF	; 255
 3b8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ba:	08 95       	ret

000003bc <__fp_split3>:
 3bc:	57 fd       	sbrc	r21, 7
 3be:	90 58       	subi	r25, 0x80	; 128
 3c0:	44 0f       	add	r20, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	59 f0       	breq	.+22     	; 0x3dc <__fp_splitA+0x10>
 3c6:	5f 3f       	cpi	r21, 0xFF	; 255
 3c8:	71 f0       	breq	.+28     	; 0x3e6 <__fp_splitA+0x1a>
 3ca:	47 95       	ror	r20

000003cc <__fp_splitA>:
 3cc:	88 0f       	add	r24, r24
 3ce:	97 fb       	bst	r25, 7
 3d0:	99 1f       	adc	r25, r25
 3d2:	61 f0       	breq	.+24     	; 0x3ec <__fp_splitA+0x20>
 3d4:	9f 3f       	cpi	r25, 0xFF	; 255
 3d6:	79 f0       	breq	.+30     	; 0x3f6 <__fp_splitA+0x2a>
 3d8:	87 95       	ror	r24
 3da:	08 95       	ret
 3dc:	12 16       	cp	r1, r18
 3de:	13 06       	cpc	r1, r19
 3e0:	14 06       	cpc	r1, r20
 3e2:	55 1f       	adc	r21, r21
 3e4:	f2 cf       	rjmp	.-28     	; 0x3ca <__fp_split3+0xe>
 3e6:	46 95       	lsr	r20
 3e8:	f1 df       	rcall	.-30     	; 0x3cc <__fp_splitA>
 3ea:	08 c0       	rjmp	.+16     	; 0x3fc <__fp_splitA+0x30>
 3ec:	16 16       	cp	r1, r22
 3ee:	17 06       	cpc	r1, r23
 3f0:	18 06       	cpc	r1, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	f1 cf       	rjmp	.-30     	; 0x3d8 <__fp_splitA+0xc>
 3f6:	86 95       	lsr	r24
 3f8:	71 05       	cpc	r23, r1
 3fa:	61 05       	cpc	r22, r1
 3fc:	08 94       	sec
 3fe:	08 95       	ret

00000400 <__fp_zero>:
 400:	e8 94       	clt

00000402 <__fp_szero>:
 402:	bb 27       	eor	r27, r27
 404:	66 27       	eor	r22, r22
 406:	77 27       	eor	r23, r23
 408:	cb 01       	movw	r24, r22
 40a:	97 f9       	bld	r25, 7
 40c:	08 95       	ret

0000040e <__mulsf3>:
 40e:	0b d0       	rcall	.+22     	; 0x426 <__mulsf3x>
 410:	c4 cf       	rjmp	.-120    	; 0x39a <__fp_round>
 412:	b5 df       	rcall	.-150    	; 0x37e <__fp_pscA>
 414:	28 f0       	brcs	.+10     	; 0x420 <__mulsf3+0x12>
 416:	ba df       	rcall	.-140    	; 0x38c <__fp_pscB>
 418:	18 f0       	brcs	.+6      	; 0x420 <__mulsf3+0x12>
 41a:	95 23       	and	r25, r21
 41c:	09 f0       	breq	.+2      	; 0x420 <__mulsf3+0x12>
 41e:	a6 cf       	rjmp	.-180    	; 0x36c <__fp_inf>
 420:	ab cf       	rjmp	.-170    	; 0x378 <__fp_nan>
 422:	11 24       	eor	r1, r1
 424:	ee cf       	rjmp	.-36     	; 0x402 <__fp_szero>

00000426 <__mulsf3x>:
 426:	ca df       	rcall	.-108    	; 0x3bc <__fp_split3>
 428:	a0 f3       	brcs	.-24     	; 0x412 <__mulsf3+0x4>

0000042a <__mulsf3_pse>:
 42a:	95 9f       	mul	r25, r21
 42c:	d1 f3       	breq	.-12     	; 0x422 <__mulsf3+0x14>
 42e:	95 0f       	add	r25, r21
 430:	50 e0       	ldi	r21, 0x00	; 0
 432:	55 1f       	adc	r21, r21
 434:	62 9f       	mul	r22, r18
 436:	f0 01       	movw	r30, r0
 438:	72 9f       	mul	r23, r18
 43a:	bb 27       	eor	r27, r27
 43c:	f0 0d       	add	r31, r0
 43e:	b1 1d       	adc	r27, r1
 440:	63 9f       	mul	r22, r19
 442:	aa 27       	eor	r26, r26
 444:	f0 0d       	add	r31, r0
 446:	b1 1d       	adc	r27, r1
 448:	aa 1f       	adc	r26, r26
 44a:	64 9f       	mul	r22, r20
 44c:	66 27       	eor	r22, r22
 44e:	b0 0d       	add	r27, r0
 450:	a1 1d       	adc	r26, r1
 452:	66 1f       	adc	r22, r22
 454:	82 9f       	mul	r24, r18
 456:	22 27       	eor	r18, r18
 458:	b0 0d       	add	r27, r0
 45a:	a1 1d       	adc	r26, r1
 45c:	62 1f       	adc	r22, r18
 45e:	73 9f       	mul	r23, r19
 460:	b0 0d       	add	r27, r0
 462:	a1 1d       	adc	r26, r1
 464:	62 1f       	adc	r22, r18
 466:	83 9f       	mul	r24, r19
 468:	a0 0d       	add	r26, r0
 46a:	61 1d       	adc	r22, r1
 46c:	22 1f       	adc	r18, r18
 46e:	74 9f       	mul	r23, r20
 470:	33 27       	eor	r19, r19
 472:	a0 0d       	add	r26, r0
 474:	61 1d       	adc	r22, r1
 476:	23 1f       	adc	r18, r19
 478:	84 9f       	mul	r24, r20
 47a:	60 0d       	add	r22, r0
 47c:	21 1d       	adc	r18, r1
 47e:	82 2f       	mov	r24, r18
 480:	76 2f       	mov	r23, r22
 482:	6a 2f       	mov	r22, r26
 484:	11 24       	eor	r1, r1
 486:	9f 57       	subi	r25, 0x7F	; 127
 488:	50 40       	sbci	r21, 0x00	; 0
 48a:	8a f0       	brmi	.+34     	; 0x4ae <__mulsf3_pse+0x84>
 48c:	e1 f0       	breq	.+56     	; 0x4c6 <__mulsf3_pse+0x9c>
 48e:	88 23       	and	r24, r24
 490:	4a f0       	brmi	.+18     	; 0x4a4 <__mulsf3_pse+0x7a>
 492:	ee 0f       	add	r30, r30
 494:	ff 1f       	adc	r31, r31
 496:	bb 1f       	adc	r27, r27
 498:	66 1f       	adc	r22, r22
 49a:	77 1f       	adc	r23, r23
 49c:	88 1f       	adc	r24, r24
 49e:	91 50       	subi	r25, 0x01	; 1
 4a0:	50 40       	sbci	r21, 0x00	; 0
 4a2:	a9 f7       	brne	.-22     	; 0x48e <__mulsf3_pse+0x64>
 4a4:	9e 3f       	cpi	r25, 0xFE	; 254
 4a6:	51 05       	cpc	r21, r1
 4a8:	70 f0       	brcs	.+28     	; 0x4c6 <__mulsf3_pse+0x9c>
 4aa:	60 cf       	rjmp	.-320    	; 0x36c <__fp_inf>
 4ac:	aa cf       	rjmp	.-172    	; 0x402 <__fp_szero>
 4ae:	5f 3f       	cpi	r21, 0xFF	; 255
 4b0:	ec f3       	brlt	.-6      	; 0x4ac <__mulsf3_pse+0x82>
 4b2:	98 3e       	cpi	r25, 0xE8	; 232
 4b4:	dc f3       	brlt	.-10     	; 0x4ac <__mulsf3_pse+0x82>
 4b6:	86 95       	lsr	r24
 4b8:	77 95       	ror	r23
 4ba:	67 95       	ror	r22
 4bc:	b7 95       	ror	r27
 4be:	f7 95       	ror	r31
 4c0:	e7 95       	ror	r30
 4c2:	9f 5f       	subi	r25, 0xFF	; 255
 4c4:	c1 f7       	brne	.-16     	; 0x4b6 <__mulsf3_pse+0x8c>
 4c6:	fe 2b       	or	r31, r30
 4c8:	88 0f       	add	r24, r24
 4ca:	91 1d       	adc	r25, r1
 4cc:	96 95       	lsr	r25
 4ce:	87 95       	ror	r24
 4d0:	97 f9       	bld	r25, 7
 4d2:	08 95       	ret

000004d4 <_exit>:
 4d4:	f8 94       	cli

000004d6 <__stop_program>:
 4d6:	ff cf       	rjmp	.-2      	; 0x4d6 <__stop_program>
